using System;

namespace KnuddelsLib
{
    internal static class Payload
    {
        public const string GetUsableToken = "{\"operationName\":\"RefreshSessionToken\",\"variables\":{\"sessionInfo\":{\"type\":\"K3GraphQl\",\"clientVersion\":{\"major\":6,\"minor\":6,\"patch\":1,\"buildInfo\":\"46372d94adb034e3c636e1472be5bb3d0d971c05\"},\"platform\":\"Web\",\"osInfo\":{\"type\":\"Windows\",\"version\":\"Windows 10 64-bit\"},\"deviceIdentifiers\":[\"d483d59a-5c22-480b-bb62-f8350df3aaa1\"]}},\"query\":\"query RefreshSessionToken($sessionInfo: SessionInfo!, $oldSessionToken: SessionToken) {\\n  login {\\n    refreshSession(sessionInfo: $sessionInfo, token: $oldSessionToken) {\\n      ... on RefreshSessionSuccess {\\n        expiry\\n        token\\n        __typename\\n      }\\n      ...RefreshSessionError\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment RefreshSessionError on RefreshSessionError {\\n  errorMessage\\n  user {\\n    ...UserWithLockInfo\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment UserWithLockInfo on User {\\n  id\\n  nick\\n  lockInfo {\\n    ... on UnlockedLockInfo {\\n      __typename\\n    }\\n    ... on TemporaryLockInfo {\\n      lockReason\\n      lockedUntilDate\\n      __typename\\n    }\\n    ... on PermanentLockInfo {\\n      lockReason\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\"}";
        public const string ChangePassword = "{\"operationName\":\"SendAppDataEvent\",\"variables\":{\"event\":{\"appId\":\"ChangePasswordApp\",\"channelName\":\"\",\"eventKey\":\"__fetchEventRequest\",\"eventValue\":\"{\\\"id\\\":\\\"0.1853929324744481\\\",\\\"data\\\":{\\\"newPassword\\\":\\\"*\\\",\\\"newPasswordRepeat\\\":\\\"*\\\",\\\"nickname\\\":\\\"#\\\",\\\"oldPassword\\\":\\\"+\\\"},\\\"key\\\":\\\"changePassword\\\"}\"}},\"query\":\"mutation SendAppDataEvent($event: AppDataEventInput!) {\\n  apps {\\n    sendAppDataEvent(event: $event) {\\n      unused\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string GetAllChannel = "{\"operationName\":\"GetChannelListOverview\",\"variables\":{\"groupAmount\":100},\"query\":\"query GetChannelListOverview($groupAmount: Int!) {\\n  channel {\\n    channelAds(limit: 3) {\\n      ...ChannelAd\\n      __typename\\n    }\\n    categories {\\n      ...ChannelCategory\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment ChannelAd on ChannelAd {\\n  adCampaignId\\n  channelGroup {\\n    id\\n    name\\n    info {\\n      ...ChannelGroupInfo\\n      __typename\\n    }\\n    channels {\\n      id\\n      onlineUserCount\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ChannelGroupInfo on ChannelGroupInfo {\\n  previewImageUrl\\n  backgroundColor {\\n    ...Color\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment Color on Color {\\n  alpha\\n  blue\\n  green\\n  red\\n  __typename\\n}\\n\\nfragment ChannelCategory on ChannelCategory {\\n  id\\n  name\\n  channelGroups(first: $groupAmount) {\\n    id\\n    name\\n    info {\\n      ...ChannelGroupInfo\\n      __typename\\n    }\\n    channels {\\n      id\\n      name\\n      onlineUserCount\\n      __typename\\n    }\\n    __typename\\n  }\\n  __typename\\n}\\n\"}";
        public const string JoinChannelbyId = "{\"operationName\":\"JoinChannelById\",\"variables\":{\"channelId\":\"*\",\"pixelDensity\":1},\"query\":\"mutation JoinChannelById($channelId: ID!, $pixelDensity: Float!) {\\n  channel {\\n    joinById(id: $channelId) {\\n      channel {\\n        ...ActiveChannel\\n        __typename\\n      }\\n      error {\\n        ...ChannelJoinError\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment ActiveChannel on Channel {\\n  id\\n  name\\n  users {\\n    ...ChannelUser\\n    __typename\\n  }\\n  groupInfo {\\n    backgroundColor {\\n      ...Color\\n      __typename\\n    }\\n    backgroundImageInfo {\\n      mode\\n      url\\n      __typename\\n    }\\n    highlightColor {\\n      ...Color\\n      __typename\\n    }\\n    isMyChannel\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment ChannelUser on User {\\n  id\\n  nick\\n  age\\n  gender\\n  profilePicture {\\n    urlCustomSizeSquare(pixelDensity: $pixelDensity, size: 40)\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment Color on Color {\\n  alpha\\n  blue\\n  green\\n  red\\n  __typename\\n}\\n\\nfragment ChannelJoinError on ChannelJoinMutationResponseError {\\n  type\\n  freetext\\n  userNick\\n  otherChannelName\\n  minAge\\n  maxUser\\n  startTime\\n  endTime\\n  minKnuddels\\n  minTradeableSmileys\\n  minRegisteredDays\\n  minStammiMonths\\n  requiredGender\\n  requiredStatusName\\n  __typename\\n}\\n\"}";
        public const string GetMessagesFromChannelID = "{\"operationName\":\"GetConversation\",\"variables\":{\"messageCount\":5000,\"beforeMessageId\":null,\"id\":\"*\",\"pixelDensity\":1},\"query\":\"query GetConversation($id: ID!, $messageCount: Int = 50, $beforeMessageId: ID = null, $pixelDensity: Float!) {\\n  messenger {\\n    conversation(id: $id) {\\n      ...FullConversation\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment FullConversation on MessengerConversation {\\n  ...FullConversationWithoutMessages\\n  messages(limit: $messageCount, beforeMessageId: $beforeMessageId) {\\n    messages {\\n      ...MessengerMessage\\n      __typename\\n    }\\n    hasMore\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment FullConversationWithoutMessages on MessengerConversation {\\n  id\\n  isArchived\\n  otherParticipants {\\n    ...MessengerBasicUser\\n    age\\n    albumPhotosUrl\\n    canReceiveMessages\\n    city\\n    distance\\n    gender\\n    id\\n    ignoreState\\n    isIgnoring\\n    isOnline\\n    nick\\n    profilePicture {\\n      urlCustomSizeSquare(pixelDensity: $pixelDensity, size: 60)\\n      __typename\\n    }\\n    readMe\\n    relationshipStatus\\n    sexualOrientation\\n    onlineMinutes\\n    isAppBot\\n    isLockedByAutomaticComplaint\\n    automaticComplaintCommand\\n    isReportable\\n    __typename\\n  }\\n  readState {\\n    markedAsUnread\\n    unreadMessageCount\\n    lastReadMessage {\\n      id\\n      __typename\\n    }\\n    __typename\\n  }\\n  latestMessage {\\n    ...MessengerMessage\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment MessengerBasicUser on User {\\n  id\\n  nick\\n  isOnline\\n  canSendImages\\n  __typename\\n}\\n\\nfragment MessengerMessage on MessengerMessage {\\n  id\\n  nestedMessage {\\n    id\\n    sender {\\n      id\\n      nick\\n      __typename\\n    }\\n    formattedText\\n    timestamp\\n    type\\n    image {\\n      url\\n      __typename\\n    }\\n    __typename\\n  }\\n  sender {\\n    ...MessengerBasicUser\\n    __typename\\n  }\\n  starred\\n  formattedText\\n  timestamp\\n  image {\\n    url\\n    __typename\\n  }\\n  snap {\\n    url\\n    duration\\n    decryptionKey\\n    __typename\\n  }\\n  __typename\\n}\\n\"}";
        public const string GetMessageOverview = "{\"operationName\":\"MessengerOverview\",\"variables\":{\"limit\":*,\"before\":#,\"pixelDensity\":1},\"query\":\"query MessengerOverview($limit: Int = 20, $before: UtcTimestamp = null, $pixelDensity: Float!) {\\n  messenger {\\n    conversations(limit: $limit, before: $before) {\\n      conversations {\\n        ...FullConversationWithoutMessages\\n        __typename\\n      }\\n      hasMore\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment FullConversationWithoutMessages on MessengerConversation {\\n  id\\n  isArchived\\n  otherParticipants {\\n    ...MessengerBasicUser\\n    age\\n    albumPhotosUrl\\n    canReceiveMessages\\n    city\\n    distance\\n    gender\\n    id\\n    ignoreState\\n    isIgnoring\\n    isOnline\\n    nick\\n    profilePicture {\\n      urlCustomSizeSquare(pixelDensity: $pixelDensity, size: 60)\\n      __typename\\n    }\\n    readMe\\n    relationshipStatus\\n    sexualOrientation\\n    onlineMinutes\\n    isAppBot\\n    isLockedByAutomaticComplaint\\n    automaticComplaintCommand\\n    isReportable\\n    __typename\\n  }\\n  readState {\\n    markedAsUnread\\n    unreadMessageCount\\n    lastReadMessage {\\n      id\\n      __typename\\n    }\\n    __typename\\n  }\\n  latestMessage {\\n    ...MessengerMessage\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment MessengerBasicUser on User {\\n  id\\n  nick\\n  isOnline\\n  canSendImages\\n  __typename\\n}\\n\\nfragment MessengerMessage on MessengerMessage {\\n  id\\n  nestedMessage {\\n    id\\n    sender {\\n      id\\n      nick\\n      __typename\\n    }\\n    formattedText\\n    timestamp\\n    type\\n    image {\\n      url\\n      __typename\\n    }\\n    __typename\\n  }\\n  sender {\\n    ...MessengerBasicUser\\n    __typename\\n  }\\n  starred\\n  formattedText\\n  timestamp\\n  image {\\n    url\\n    __typename\\n  }\\n  snap {\\n    url\\n    duration\\n    decryptionKey\\n    __typename\\n  }\\n  __typename\\n}\\n\"}";
        public const string MarkRead = "{\"operationName\":\"MessengerMarkConversationsAsRead\",\"variables\":{\"ids\":[\"*\"]},\"query\":\"mutation MessengerMarkConversationsAsRead($ids: [ID!]!) {\\n  messenger {\\n    readConversations(ids: $ids) {\\n      error\\n      conversation {\\n        id\\n        readState {\\n          lastReadMessage {\\n            id\\n            __typename\\n          }\\n          markedAsUnread\\n          unreadMessageCount\\n          __typename\\n        }\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string ProfileVisitorData = "{\"operationName\":\"profileVisitors\",\"variables\":{\"pixelDensity\":1},\"query\":\"query profileVisitors($pixelDensity: Float!) {\\n  user {\\n    profileVisitors {\\n      visitors {\\n        ...ProfileVisitorsUser\\n        __typename\\n      }\\n      visibilityStatus\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment ProfileVisitorsUser on User {\\n  id\\n  nick\\n  age\\n  gender\\n  city\\n  profilePicture {\\n    urlCustomSizeSquare(pixelDensity: $pixelDensity, size: 60)\\n    __typename\\n  }\\n  __typename\\n}\\n\"}";
        public const string GetUserByToken = "{\"operationName\":\"GetCurrentUserNick\",\"variables\":{},\"query\":\"query GetCurrentUserNick {\\n  user {\\n    currentUser {\\n      id\\n      nick\\n      gender\\n      profilePicture {\\n        exists\\n        urlLargeSquare\\n        urlVeryLarge\\n        __typename\\n      }\\n      knuddelAmount\\n      age\\n      dateOfRegistration\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string SendMessage = "{\"operationName\":\"MessengerSendMessage\",\"variables\":{\"id\":\"-\",\"text\":\"*\",\"messageCorrelationId\":\"f79ae0de-6c6d-4946-8013-0c15d37dff98\"},\"query\":\"mutation MessengerSendMessage($id: ID!, $text: String!, $messageCorrelationId: ID!) {\\n  messenger {\\n    sendMessage(conversationId: $id, text: $text, messageCorrelationId: $messageCorrelationId) {\\n      error {\\n        type\\n        filterReason\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string ChannelMessage = "{\"operationName\":\"SendMessage\",\"variables\":{\"channelId\":\"*\",\"text\":\"#\"},\"query\":\"mutation SendMessage($channelId: ID!, $text: String!) {\\n  channel {\\n    sendMessage(id: $channelId, text: $text) {\\n      error\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string KeepOnline = "{\"operationName\":\"KeepOnline\",\"variables\":{\"isPresent\":false},\"query\":\"mutation KeepOnline($isPresent: Boolean!) {\\n  user {\\n    keepOnline(isPresent: $isPresent) {\\n      __typename\\n      ... on KeepOnlineError {\\n        reason\\n        __typename\\n      }\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string NoSleep = "{\"operationName\":\"SendAppControlPlaneEvent\",\"variables\":{\"event\":{\"appId\":\"UserApp:52761:O:0\",\"channelName\":\"Matratzensport\",\"eventKey\":\"performanceToken\",\"eventValue\":\"{\\\"tokens\\\":[{\\\"type\\\":\\\"20_toolsLoaded\\\",\\\"diff\\\":174},{\\\"type\\\":\\\"40_trackjsLoaded\\\",\\\"diff\\\":20},{\\\"type\\\":\\\"50_bridgeInitialized\\\",\\\"diff\\\":18},{\\\"type\\\":\\\"60_appDOMContentLoaded\\\",\\\"diff\\\":392},{\\\"type\\\":\\\"70_userInterfaceRendered\\\",\\\"diff\\\":50},{\\\"type\\\":\\\"80_appLoad\\\",\\\"diff\\\":1}]}\"}},\"query\":\"mutation SendAppControlPlaneEvent($event: AppControlPlaneEventInput!) {\\n  apps {\\n    sendAppEvent(event: $event) {\\n      unused\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string GetUserInfoByName = "{\"operationName\":\"ContactsUserByNick\",\"variables\":{\"nick\":\"*\",\"pixelDensity\":1},\"query\":\"query ContactsUserByNick($nick: String!, $pixelDensity: Float!) {\\n  user {\\n    userFromNick(nick: $nick) {\\n      ...ContactsUser\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment ContactsUser on User {\\n  id\\n  nick\\n  profilePicture {\\n    urlCustomSizeSquare(pixelDensity: $pixelDensity, size: 60)\\n    __typename\\n  }\\n  isOnline\\n  readMe\\n  canReceiveMessages\\n  __typename\\n}\\n\"}";
        public const string GetAlbumPhotos = "{\"operationName\":\"GetAlbumInfoForProfile\",\"variables\":{\"userId\":\"*\"},\"query\":\"query GetAlbumInfoForProfile($userId: ID!) {\\n  user {\\n    user(id: $userId) {\\n      albumPhotos(limit: 100) {\\n        id\\n        thumbnailUrl\\n        __typename\\n      }\\n      albums {\\n        ...Album\\n        __typename\\n      }\\n      albumProfilePhoto {\\n        ...AlbumDetailPhoto\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\\nfragment Album on Album {\\n  id\\n  title\\n  isOwner\\n  albumPhotos {\\n    ...AlbumDetailPhoto\\n    __typename\\n  }\\n  __typename\\n}\\n\\nfragment AlbumDetailPhoto on AlbumPhoto {\\n  id\\n  thumbnailUrl\\n  photoUrl\\n  administrationUrl\\n  description {\\n    formattedText\\n    rawText\\n    __typename\\n  }\\n  isOwner\\n  __typename\\n}\\n\"}";
        public const string ConverstationWithParticipants = "{\"operationName\":\"ConversationWithParticipants\",\"variables\":{\"ids\":[\"*\"]},\"query\":\"query ConversationWithParticipants($ids: [ID!]!) {\\n  messenger {\\n    conversationWithParticipants(otherParticipantIds: $ids) {\\n      id\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
        public const string Report = "{\"operationName\":\"CreateUserComplaint\",\"variables\":{\"explanation\":\"Fake Account\",\"reasonId\":\"0.15\",\"userId\":\"*\"},\"query\":\"mutation CreateUserComplaint($userId: ID!, $explanation: String!, $reasonId: ID!) {\\n  complaints {\\n    reportUser(explanation: $explanation, reasonId: $reasonId, userId: $userId) {\\n      error\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n\"}";
    }
}
